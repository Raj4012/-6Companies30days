You are given a 0-indexed string s, a string a, a string b, and an integer k.

An index i is beautiful if:

0 <= i <= s.length - a.length
s[i..(i + a.length - 1)] == a
There exists an index j such that:
0 <= j <= s.length - b.length
s[j..(j + b.length - 1)] == b
|j - i| <= k
Return the array that contains beautiful indices in sorted order from smallest to largest.

 

Example 1:

Input: s = "isawsquirrelnearmysquirrelhouseohmy", a = "my", b = "squirrel", k = 15
Output: [16,33]
Explanation: There are 2 beautiful indices: [16,33].
- The index 16 is beautiful as s[16..17] == "my" and there exists an index 4 with s[4..11] == "squirrel" and |16 - 4| <= 15.
- The index 33 is beautiful as s[33..34] == "my" and there exists an index 18 with s[18..25] == "squirrel" and |33 - 18| <= 15.
Thus we return [16,33] as the result.
Example 2:

Input: s = "abcd", a = "a", b = "a", k = 4
Output: [0]
Explanation: There is 1 beautiful index: [0].
- The index 0 is beautiful as s[0..0] == "a" and there exists an index 0 with s[0..0] == "a" and |0 - 0| <= 4.
Thus we return [0] as the result.

class Solution {
    public List<Integer> beautifulIndices(String s, String a, String b, int k) {
        List<Integer> result = new ArrayList<>();
        List<Integer> aIndices = new ArrayList<>();
        List<Integer> bIndices = new ArrayList<>();

        for(int i=0; i <= s.length() - a.length(); i++){
            if(s.substring(i, i+a.length()).equals(a)){
                aIndices.add(i);
            }
        }

        for(int i=0; i<= s.length() - b.length(); i++){
            if(s.substring(i, i+b.length()).equals(b)){
                bIndices.add(i);
            }
        }
        for (int aIndex : aIndices) {
            for (int bIndex : bIndices) {
                if (Math.abs(aIndex - bIndex) <= k) {
                    result.add(aIndex);
                    break;
                }
            }
        }

        return result;
        
    }
}
